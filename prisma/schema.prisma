// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Phone {
  id           Int         @id @default(autoincrement())
  brand_name   String
  manufacturer String
  phone_model  String      @unique
  total_ram    Int
  Inference    Inference[]
  LLMInference LLMInference[]
}

model Inference {
  id                 Int     @id @default(autoincrement())
  phone              Phone   @relation(fields: [phone_id], references: [id])
  phone_id           Int
  init_speed         Int?
  first_inf_speed    Int?
  standard_deviation Int?
  inf_speed          Int?
  ml_model           String
  category           String
  quantization       String
  dataset            String
  num_images         Int
  uses_nnapi         Boolean
  uses_gpu           Boolean
  num_threads        Int
  ram_usage          Float?
  gpu_usage          Float?
  cpu_usage          Float?
  gpu                String?
  cpu                String?
  power              Float?
  energy             Float?
  android_id         String
  errorMessage       String?
}

model Measurement {
  id                 Int     @id @default(autoincrement())
  average            Float?
  median             Float?
  peak               Float?
  std                Float?
  ramLLMInferences LLMInference[] @relation("RamMeasurement")
  gpuLLMInferences LLMInference[] @relation("GpuMeasurement")
  cpuLLMInferences LLMInference[] @relation("CpuMeasurement")
  prefillLLMInferences LLMInference[] @relation("PrefillMeasurement")
  decodelLLMInferences LLMInference[] @relation("DecodeMeasurement")
}

model LLMModel {
  id        Int    @id @default(autoincrement())
  name      String @unique
  inferences LLMInference[]
}


model LLMInference {
  id                 Int     @id @default(autoincrement())
  phone              Phone   @relation(fields: [phone_id], references: [id])
  phone_id           Int

  llm_model          LLMModel @relation(fields: [llm_model_id], references: [id])
  llm_model_id       Int

  load_time          Int?

  ram                Measurement @relation("RamMeasurement", fields: [ram_id], references: [id], map: "Ram_fkey")
  ram_id             Int

  gpu                Measurement? @relation("GpuMeasurement", fields: [gpu_id], references: [id], map: "Gpu_fkey")
  gpu_id             Int?

  cpu                Measurement? @relation("CpuMeasurement", fields: [cpu_id], references: [id], map: "Cpu_fkey")
  cpu_id             Int?

  prefill            Measurement @relation("PrefillMeasurement", fields: [prefill_id], references: [id], map: "Prefil_fkey")
  prefill_id         Int

  decode             Measurement @relation("DecodeMeasurement", fields: [decode_id], references: [id], map: "Decode_fkey")
  decode_id          Int

  powerAverage       Float?
  energyAverage      Float?
}
